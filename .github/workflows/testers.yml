name: Post Test Release

on:
  workflow_dispatch:
    inputs:
        ping:
          description: 'What testers should be pinged'
          required: true
          type: choice
          options:
          - none
          - all
          - windows
          - mac
          - android
        desc:
          description: 'Description (what to test)'
          required: false
          type: string

jobs:
  post:
    name: Post to Testers in discord
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          path: repo
      - name: Define variables
        id: defvar
        run: |
          BRANCH=main
          API_URL="https://api.github.com/repos/carrotdevs/geode-clicksound/actions/workflows/build.yml/runs?per_page=1&branch=$BRANCH&event=push&status=success"
          RUN_ID=$(curl $API_URL | jq .workflow_runs[0].id)
          echo "run_id=$RUN_ID" >> $GITHUB_OUTPUT
      - name: Download artifacts
        uses: actions/github-script@v6
        with:
          script: |
              const fs = require('node:fs/promises');

              const path = `${process.env.GITHUB_WORKSPACE}/artifacts`;
              await fs.mkdir(path, { recursive: true });

              const allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ steps.defvar.outputs.run_id }},
              });
              console.log(`Found ${allArtifacts.data.artifacts.length} artifacts!`);
              for (const artifact of allArtifacts.data.artifacts) {
              console.log(`Downloading ${artifact.name}`);
              const download = await github.rest.actions.downloadArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifact.id,
                  archive_format: 'zip',
              });
              
              await fs.writeFile(`${path}/${artifact.name}.zip`, Buffer.from(download.data));
              }
      - name: Unzip Build
        run: |
          7z x "./artifacts/Build Output.zip" -o"./"
      - name: Run Python
        id: runit
        shell: bash
        run: |
          python3 repo/.github/sendtotesters.py
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL_2 }}
          THE_MOD_ID: "beat.click-sound"
          PING: ${{ inputs.ping }}
          DESC: ${{ inputs.desc }}
